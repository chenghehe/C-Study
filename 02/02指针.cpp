//#include<iostream>
//
//using namespace std;
//
//int main() {
//	//int a = 10;
//
//	////指针定义的语法：数据类型  *  指针变量名
//	//int* p;
//	////让指针记录变量a的地址
//	//p = &a;		//建立关系
//	//cout << "a的占用内存空间的地址为：" << &a << endl;
//	//cout << "指针p的值为：" << p << endl;		//其实指针就是指向变量的内存地址
//
//	////2.使用指针
//	////可以通过解引用的方式找到指针指向的内存
//	////指针前加*代表解引用，找到指针指向内存中的数据
//
//	//*p = 500;	//解引用，通过指针修改变量a的值
//	//cout << "a=：" << a << endl;
//	//cout << "*p：" << *p << endl;
//
//
//	////指针在32位操作系统下占四个字节空间大小，不管什么数据类型
//	////64位操作系统下占8个字节空间大小
//	//cout << "int * 指针占用的内存空间大小" << sizeof(p) << endl;
//	//cout << "float* 占用的内存空间大小" << sizeof(float*) << endl;
//	//cout << "double* 占用的内存空间大小" << sizeof(double*) << endl;
//	//cout << "long* 占用的内存空间大小" << sizeof(long*) << endl;
//
//
//	////空指针是指针变量指向内存中编号为0的空间为空指针
//	//int* p = NULL;		//赋值为空指针，一般用于初始化
//
//	////空指针不能访问，
//	//cout << *p << endl;		//报错		引发了异常: 读取访问权限冲突。	p 是 nullptr。
//
//
//	//野指针		
//	//尽量避免野指针
//	int* p = (int*)0x1100;		//指针变量p指向内存地址编号为0x1100的空间
//
//	//访问出错
//	cout << *p << endl;	//引发了异常: 读取访问权限冲突。p 是 0x1100。
//
//
//	system("pause");
//}